// Code generated by "jade.go"; DO NOT EDIT.

package views

import (
	"bufio"
	"fmt"
	"net/url"

	"github.com/ngocphuongnb/tetua/app/asset"
	"github.com/ngocphuongnb/tetua/app/cache"
	"github.com/ngocphuongnb/tetua/app/config"
	"github.com/ngocphuongnb/tetua/app/entities"
	"github.com/ngocphuongnb/tetua/app/utils"
)

const (
	profile__19 = `</ul><label class="menu-trigger"><svg viewBox="0 0 24 24"><path fill="currentColor" d="M3,6H21V8H3V6M3,11H21V13H3V11M3,16H21V18H3V16Z"></path></svg></label></nav></header><div class="wrapper"><div class="container"><div class="box page-desc profile">`
	profile__20 = `<h1 style="text-align:center">`
	profile__21 = `</h1><div class="user-attrs flex"><span><svg viewBox="0 0 24 24"><path fill="currentColor" d="M12,15C12.81,15 13.5,14.7 14.11,14.11C14.7,13.5 15,12.81 15,12C15,11.19 14.7,10.5 14.11,9.89C13.5,9.3 12.81,9 12,9C11.19,9 10.5,9.3 9.89,9.89C9.3,10.5 9,11.19 9,12C9,12.81 9.3,13.5 9.89,14.11C10.5,14.7 11.19,15 12,15M12,2C14.75,2 17.1,3 19.05,4.95C21,6.9 22,9.25 22,12V13.45C22,14.45 21.65,15.3 21,16C20.3,16.67 19.5,17 18.5,17C17.3,17 16.31,16.5 15.56,15.5C14.56,16.5 13.38,17 12,17C10.63,17 9.45,16.5 8.46,15.54C7.5,14.55 7,13.38 7,12C7,10.63 7.5,9.45 8.46,8.46C9.45,7.5 10.63,7 12,7C13.38,7 14.55,7.5 15.54,8.46C16.5,9.45 17,10.63 17,12V13.45C17,13.86 17.16,14.22 17.46,14.53C17.76,14.84 18.11,15 18.5,15C18.92,15 19.27,14.84 19.57,14.53C19.87,14.22 20,13.86 20,13.45V12C20,9.81 19.23,7.93 17.65,6.35C16.07,4.77 14.19,4 12,4C9.81,4 7.93,4.77 6.35,6.35C4.77,7.93 4,9.81 4,12C4,14.19 4.77,16.07 6.35,17.65C7.93,19.23 9.81,20 12,20H17V22H12C9.25,22 6.9,21 4.95,19.05C3,17.1 2,14.75 2,12C2,9.25 3,6.9 4.95,4.95C6.9,3 9.25,2 12,2Z"></path></svg>`
	profile__22 = `</span><span><svg viewBox="0 0 24 24"><path fill="currentColor" d="M9,10H7V12H9V10M13,10H11V12H13V10M17,10H15V12H17V10M19,3H18V1H16V3H8V1H6V3H5C3.89,3 3,3.9 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5A2,2 0 0,0 19,3M19,19H5V8H19V19Z"></path></svg>`
	profile__24 = `</div><div class="bio">`
	profile__25 = `</div></div><div class="layout"><div class="left"></div><main class="main">`
	profile__26 = `<h2 style="margin-top:0">Recent comments</h2><div class="comments">`
	profile__27 = `</div><h2>Recent posts</h2><div class="article-list">`
	profile__30 = `</ul></main></div></div><div class="mobile-menu"><div class="menu-head">`
	profile__69 = `<span><svg viewBox="0 0 24 24"><path fill="currentColor" d="M22 6C22 4.9 21.1 4 20 4H4C2.9 4 2 4.9 2 6V18C2 19.1 2.9 20 4 20H20C21.1 20 22 19.1 22 18V6M20 6L12 11L4 6H20M20 18H4V8L12 13L20 8V18Z"></path></svg>`
	profile__71 = `<span><svg viewBox="0 0 24 24"><path fill="currentColor" d="M3.9,12C3.9,10.29 5.29,8.9 7,8.9H11V7H7A5,5 0 0,0 2,12A5,5 0 0,0 7,17H11V15.1H7C5.29,15.1 3.9,13.71 3.9,12M8,13H16V11H8V13M17,7H13V8.9H17C18.71,8.9 20.1,10.29 20.1,12C20.1,13.71 18.71,15.1 17,15.1H13V17H17A5,5 0 0,0 22,12A5,5 0 0,0 17,7Z"></path></svg>`
)

func Profile(user *entities.User, paginate *entities.Paginate[entities.Post], comments []*entities.Comment) func(meta *entities.Meta, wr *bufio.Writer) {
	return func(meta *entities.Meta, wr *bufio.Writer) {
		buffer := &WriterAsBuffer{wr}

		buffer.WriteString(commentlist__0)

		var title = meta.GetTitle()
		var appName = config.Setting("app_name")
		var appLogo = config.Setting("app_logo")
		var encodeRequestURL = url.QueryEscape(meta.RequestURL)
		buffer.WriteString(commentlist__1)
		WriteAll(title, true, buffer)
		buffer.WriteString(commentlist__2)
		WriteAll(meta.Canonical, true, buffer)
		buffer.WriteString(commentlist__3)
		WriteAll(meta.Type, true, buffer)
		buffer.WriteString(commentlist__4)
		WriteAll(meta.Canonical, true, buffer)
		buffer.WriteString(commentlist__5)
		WriteAll(title, true, buffer)
		buffer.WriteString(commentlist__6)
		WriteAll(appName, true, buffer)
		buffer.WriteString(commentlist__7)
		WriteAll(config.Setting("twitter_site"), true, buffer)
		buffer.WriteString(commentlist__8)
		WriteAll(title, true, buffer)
		buffer.WriteString(commentlist__9)
		WriteAll(appName, true, buffer)
		buffer.WriteString(commentlist__10)
		WriteAll(appName, true, buffer)
		buffer.WriteString(commentlist__11)
		WriteAll(appName+" Feed", true, buffer)
		buffer.WriteString(commentlist__12)
		WriteAll(utils.Url("/feed"), true, buffer)
		buffer.WriteString(commentlist__13)
		if appLogo != "" {
			buffer.WriteString(commentlist__30)
			WriteAll(appLogo, true, buffer)
			buffer.WriteString(commentlist__31)
			WriteAll(appLogo, true, buffer)
			buffer.WriteString(commentlist__13)
		}
		if meta.Description != "" {
			buffer.WriteString(commentlist__33)
			WriteAll(meta.Description, true, buffer)
			buffer.WriteString(commentlist__34)
			WriteAll(meta.Description, true, buffer)
			buffer.WriteString(commentlist__35)
			WriteAll(meta.Description, true, buffer)
			buffer.WriteString(commentlist__13)
		}
		if meta.Image != "" {
			buffer.WriteString(commentlist__37)
			WriteAll(meta.Image, true, buffer)
			buffer.WriteString(commentlist__38)
			WriteAll(meta.Image, true, buffer)
			buffer.WriteString(commentlist__13)
		}
		WriteAll(asset.CssFile("css/light.min.css"), false, buffer)
		WriteAll(asset.CssFile("css/style.css"), false, buffer)
		WriteAll(config.Setting("inject_header"), false, buffer)
		buffer.WriteString(commentlist__14)
		WriteAll(utils.Url(""), true, buffer)
		buffer.WriteString(commentlist__15)
		var logoUrl = config.Setting("app_logo")
		if logoUrl != "" {
			buffer.WriteString(commentlist__40)
			WriteAll(logoUrl, true, buffer)
			buffer.WriteString(commentlist__41)
			WriteAll(config.Setting("app_name"), true, buffer)
			buffer.WriteString(commentlist__13)
		} else {
			buffer.WriteString(commentlist__43)

		}
		buffer.WriteString(commentlist__16)
		WriteAll(meta.Query, true, buffer)
		buffer.WriteString(commentlist__17)
		WriteAll(utils.Url("/search"), true, buffer)
		buffer.WriteString(commentlist__18)

		if meta.User == nil || meta.User.ID == 0 {
			buffer.WriteString(commentlist__44)
			WriteAll(utils.Url("/login?redirectURL="+encodeRequestURL), true, buffer)
			buffer.WriteString(commentlist__45)
			WriteAll(utils.Url("/register?redirectURL="+encodeRequestURL), true, buffer)
			buffer.WriteString(commentlist__46)

		} else {
			buffer.WriteString(commentlist__44)
			WriteAll(utils.Url("/posts/new"), true, buffer)
			buffer.WriteString(commentlist__48)
			WriteAll(meta.User.Url(), true, buffer)
			buffer.WriteString(commentlist__49)
			WriteAll(meta.User.Username, true, buffer)
			buffer.WriteString(commentlist__50)
			if meta.User.AvatarImageUrl != "" {
				buffer.WriteString(commentlist__57)
				WriteAll(meta.User.AvatarImageUrl, true, buffer)
				buffer.WriteString(commentlist__41)
				WriteAll(meta.User.Username, true, buffer)
				buffer.WriteString(commentlist__13)
			} else {
				buffer.WriteString(commentlist__60)

			}
			buffer.WriteString(commentlist__51)

			if meta.User != nil && meta.User.IsRoot() {
				buffer.WriteString(commentlist__44)
				WriteAll(utils.Url("/manage"), true, buffer)
				buffer.WriteString(commentlist__62)

			}
			buffer.WriteString(commentlist__44)
			WriteAll(meta.User.Url(), true, buffer)
			buffer.WriteString(commentlist__53)
			WriteAll(utils.Url("/posts"), true, buffer)
			buffer.WriteString(commentlist__54)
			WriteAll(utils.Url("/settings"), true, buffer)
			buffer.WriteString(commentlist__55)
			WriteAll(utils.Url("/logout?redirectURL="+encodeRequestURL), true, buffer)
			buffer.WriteString(commentlist__56)

		}
		buffer.WriteString(profile__19)
		WriteAll(user.AvatarElm("100", "100", false), false, buffer)
		buffer.WriteString(profile__20)
		WriteAll(user.Name(), true, buffer)
		buffer.WriteString(profile__21)
		WriteAll(user.Username, true, buffer)
		buffer.WriteString(profile__22)
		WriteAll("Joined on "+user.CreatedAt.Format("Jan 2, 2006"), true, buffer)
		buffer.WriteString(index__116)
		if user.Email != "" {
			buffer.WriteString(profile__69)
			WriteAll(user.Email, true, buffer)
			buffer.WriteString(index__116)
		}
		if user.URL != "" {
			buffer.WriteString(profile__71)
			WriteAll(user.URL, true, buffer)
			buffer.WriteString(index__116)
		}
		buffer.WriteString(profile__24)
		WriteAll(user.BioHTML, false, buffer)
		buffer.WriteString(profile__25)

		{
			var (
				msgs = meta.Messages
			)

			if msgs.Length() > 0 {
				buffer.WriteString(commentlist__73)
				var messages = msgs.Get()
				for _, msg := range messages {
					buffer.WriteString(commentlist__75)
					WriteAll(msg.Type, true, buffer)
					buffer.WriteString(commentlist__50)
					WriteAll(msg.Message, true, buffer)
					buffer.WriteString(commentlist__77)
				}
				buffer.WriteString(commentlist__74)
			}
		}

		buffer.WriteString(profile__26)

		for _, comment := range comments {
			{
				var (
					comment       = comment
					postID        = comment.Post.ID
					editCondition = false
					extraInfo     = false
				)

				if extraInfo {
					buffer.WriteString(commentlist__86)
					WriteAll(comment.Post.Url(), true, buffer)
					buffer.WriteString(commentlist__87)
					WriteAll(comment.Post.Name, true, buffer)
					buffer.WriteString(commentlist__88)

				}
				buffer.WriteString(commentlist__78)
				WriteEscString(fmt.Sprintf("comment-%d", comment.ID), buffer)
				buffer.WriteString(commentlist__50)
				WriteAll(comment.User.AvatarElm("30", "30", false), false, buffer)
				buffer.WriteString(commentlist__64)
				WriteAll(comment.User.Url(), true, buffer)
				buffer.WriteString(commentlist__50)
				WriteAll(comment.User.Name(), true, buffer)
				buffer.WriteString(commentlist__82)
				WriteAll(comment.CreatedAt.Format("January 2, 2006 15:04 MST"), true, buffer)
				buffer.WriteString(commentlist__83)
				WriteAll(comment.ContentHTML, false, buffer)
				if editCondition {
					buffer.WriteString(commentlist__89)
					WriteAll(comment.ID, true, buffer)
					buffer.WriteString(commentlist__90)
					WriteAll(comment.ID, true, buffer)
					buffer.WriteString(commentlist__91)

					if extraInfo {
						var commentUrl = fmt.Sprintf("%s#comment-%d", comment.Post.Url(), comment.ID)
						var postCommentsUrl = fmt.Sprintf("/manage/comments?post=%d", postID)
						var userCommentsUrl = fmt.Sprintf("/manage/comments?user=%d", postID)
						buffer.WriteString(commentlist__93)
						WriteEscString(commentUrl, buffer)
						buffer.WriteString(commentlist__94)

						if meta.User.IsRoot() {
							buffer.WriteString(commentlist__95)
							WriteEscString(postCommentsUrl, buffer)
							buffer.WriteString(commentlist__96)
							WriteEscString(userCommentsUrl, buffer)
							buffer.WriteString(commentlist__97)

						}
					}
					buffer.WriteString(commentlist__22)
				}
				buffer.WriteString(commentlist__22)
				if editCondition {
					buffer.WriteString(commentlist__98)
					WriteEscString(fmt.Sprintf("/comments/%d", comment.ID), buffer)
					buffer.WriteString(commentlist__99)
					WriteAll(postID, true, buffer)
					buffer.WriteString(commentlist__100)
					WriteAll(comment.Content, true, buffer)
					buffer.WriteString(commentlist__101)

				}
				buffer.WriteString(commentlist__85)
			}

		}
		buffer.WriteString(profile__27)

		for _, post := range paginate.Data {
			{
				var (
					post = post
				)

				var postUrl = post.Url()
				var bgStyle = ""
				if post.FeaturedImage != nil {
					bgStyle = fmt.Sprintf("background-image:url('%s')", post.FeaturedImage.Url())
				}
				buffer.WriteString(index__77)
				WriteAll(postUrl, true, buffer)
				buffer.WriteString(commentlist__49)
				WriteAll(post.Name, true, buffer)
				buffer.WriteString(commentlist__50)
				WriteAll(post.Name, true, buffer)
				buffer.WriteString(commentlist__132)
				if post.FeaturedImage != nil && post.FeaturedImage.ID > 0 {
					buffer.WriteString(index__87)
					WriteAll(postUrl, true, buffer)
					buffer.WriteString(commentlist__49)
					WriteAll(post.Name, true, buffer)
					buffer.WriteString(index__89)
					WriteEscString(bgStyle, buffer)
					buffer.WriteString(commentlist__50)
					WriteAll(post.Name, true, buffer)
					buffer.WriteString(commentlist__132)
				}
				buffer.WriteString(index__81)
				{
					buffer.WriteString(commentlist__63)
					WriteAll(post.User.AvatarElm("32", "32", false), false, buffer)
					buffer.WriteString(commentlist__64)
					WriteAll(post.User.Url(), true, buffer)
					buffer.WriteString(commentlist__49)
					WriteAll(post.User.Name(), true, buffer)
					buffer.WriteString(commentlist__50)
					WriteAll(post.User.Name(), true, buffer)
					buffer.WriteString(index__96)
					WriteAll(post.CreatedAt.Format("2006-01-02T15:04:05-0700"), true, buffer)
					buffer.WriteString(index__97)
					WriteAll(post.CreatedAt.Format("January 2, 2006"), true, buffer)
					buffer.WriteString(index__98)
					WriteEscString(fmt.Sprintf("%d views", post.ViewCount), buffer)
					buffer.WriteString(index__99)
					WriteEscString(fmt.Sprintf("%d comments", post.CommentCount), buffer)
					buffer.WriteString(index__100)

				}

				buffer.WriteString(index__82)
				WriteAll(postUrl, true, buffer)
				buffer.WriteString(commentlist__49)
				WriteAll(post.Name, true, buffer)
				buffer.WriteString(commentlist__50)
				WriteAll(post.Name, true, buffer)
				buffer.WriteString(index__85)

				for _, topic := range post.Topics {
					buffer.WriteString(commentlist__106)
					WriteAll(topic.Url(), true, buffer)
					buffer.WriteString(commentlist__49)
					WriteAll(topic.Name, true, buffer)
					buffer.WriteString(commentlist__50)
					WriteAll("#"+topic.Name, true, buffer)
					buffer.WriteString(commentlist__132)
				}
				buffer.WriteString(index__86)

			}

		}
		buffer.WriteString(commentlist__22)
		var links = paginate.Links()
		buffer.WriteString(commentlist__23)
		for _, link := range links {
			buffer.WriteString(commentlist__44)
			WriteAll(link.Link, true, buffer)
			buffer.WriteString(commentlist__103)
			WriteAll(link.Class, true, buffer)
			buffer.WriteString(commentlist__50)
			WriteAll(link.Label, true, buffer)
			buffer.WriteString(commentlist__105)

		}
		buffer.WriteString(profile__30)
		WriteAll(config.Setting("app_name"), true, buffer)
		buffer.WriteString(commentlist__25)

		if meta.User == nil || meta.User.ID == 0 {
			buffer.WriteString(commentlist__106)
			WriteAll(utils.Url("/login?redirectURL="+encodeRequestURL), true, buffer)
			buffer.WriteString(commentlist__107)
			WriteAll(utils.Url("/register?redirectURL="+encodeRequestURL), true, buffer)
			buffer.WriteString(commentlist__108)

		} else {
			{
				buffer.WriteString(commentlist__63)
				WriteAll(meta.User.AvatarElm("32", "32", false), false, buffer)
				buffer.WriteString(commentlist__64)
				WriteAll(meta.User.Url(), true, buffer)
				buffer.WriteString(commentlist__50)
				WriteAll(meta.User.Name(), true, buffer)
				buffer.WriteString(commentlist__66)
				WriteAll("@"+meta.User.Username, true, buffer)
				buffer.WriteString(commentlist__67)
				WriteAll(utils.Url("/posts/new"), true, buffer)
				buffer.WriteString(commentlist__68)
				WriteAll(utils.Url("/posts"), true, buffer)
				buffer.WriteString(commentlist__69)
				WriteAll(utils.Url("/comments"), true, buffer)
				buffer.WriteString(commentlist__70)
				WriteAll(utils.Url("/files"), true, buffer)
				buffer.WriteString(commentlist__71)
				WriteAll(utils.Url("/settings"), true, buffer)
				buffer.WriteString(commentlist__72)

			}

			if meta.User.IsRoot() {
				{
					buffer.WriteString(commentlist__119)
					WriteAll(utils.Url("/manage"), true, buffer)
					buffer.WriteString(commentlist__120)
					WriteAll(utils.Url("/manage/topics"), true, buffer)
					buffer.WriteString(commentlist__121)
					WriteAll(utils.Url("/manage/posts"), true, buffer)
					buffer.WriteString(commentlist__122)
					WriteAll(utils.Url("/manage/pages"), true, buffer)
					buffer.WriteString(commentlist__123)
					WriteAll(utils.Url("/manage/roles"), true, buffer)
					buffer.WriteString(commentlist__124)
					WriteAll(utils.Url("/manage/users"), true, buffer)
					buffer.WriteString(commentlist__125)
					WriteAll(utils.Url("/manage/comments"), true, buffer)
					buffer.WriteString(commentlist__126)
					WriteAll(utils.Url("/manage/files"), true, buffer)
					buffer.WriteString(commentlist__127)
					WriteAll(utils.Url("/manage/settings"), true, buffer)
					buffer.WriteString(commentlist__72)

				}

			}
		}
		buffer.WriteString(commentlist__26)

		for _, topic := range cache.Topics {
			buffer.WriteString(commentlist__106)
			WriteAll(topic.Url(), true, buffer)
			buffer.WriteString(commentlist__49)
			WriteAll(topic.Name, true, buffer)
			buffer.WriteString(commentlist__50)
			WriteAll("#"+topic.Name, true, buffer)
			buffer.WriteString(commentlist__132)
		}
		buffer.WriteString(commentlist__27)
		WriteAll(config.Setting("footer_content"), false, buffer)
		buffer.WriteString(commentlist__28)
		WriteAll(config.Setting("inject_footer"), false, buffer)
		WriteAll(asset.JsFile("js/layout.js"), false, buffer)
		buffer.WriteString(error__26)

	}
}
