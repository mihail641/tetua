// Code generated by "jade.go"; DO NOT EDIT.

package views

import (
	"bufio"
	"fmt"
	"net/url"

	"github.com/ngocphuongnb/tetua/app/asset"
	"github.com/ngocphuongnb/tetua/app/cache"
	"github.com/ngocphuongnb/tetua/app/config"
	"github.com/ngocphuongnb/tetua/app/entities"
	"github.com/ngocphuongnb/tetua/app/utils"
)

const (
	index__19  = `</ul><label class="menu-trigger"><svg viewBox="0 0 24 24"><path fill="currentColor" d="M3,6H21V8H3V6M3,11H21V13H3V11M3,16H21V18H3V16Z"></path></svg></label></nav></header><div class="wrapper"><div class="container"><div class="layout"><div class="left">`
	index__20  = `<div class="box fixed-sidebar"><h2 class="head">Topics</h2>`
	index__21  = `</div></div><main class="main">`
	index__22  = `<div class="article-list">`
	index__25  = `</ul></main><div class="right"><div class="box fixed-sidebar"><h2>Top posts</h2><div class="posts-list">`
	index__26  = `</div></div></div></div></div><div class="mobile-menu"><div class="menu-head">`
	index__65  = `<div class="box"><h2 class="head">Tetua</h2><ul class="tetua"><li><a href="https://github.com/ngocphuongnb/tetua"><svg viewBox="0 0 24 24"><path fill="currentColor" d="M12,2A10,10 0 0,0 2,12C2,16.42 4.87,20.17 8.84,21.5C9.34,21.58 9.5,21.27 9.5,21C9.5,20.77 9.5,20.14 9.5,19.31C6.73,19.91 6.14,17.97 6.14,17.97C5.68,16.81 5.03,16.5 5.03,16.5C4.12,15.88 5.1,15.9 5.1,15.9C6.1,15.97 6.63,16.93 6.63,16.93C7.5,18.45 8.97,18 9.54,17.76C9.63,17.11 9.89,16.67 10.17,16.42C7.95,16.17 5.62,15.31 5.62,11.5C5.62,10.39 6,9.5 6.65,8.79C6.55,8.54 6.2,7.5 6.75,6.15C6.75,6.15 7.59,5.88 9.5,7.17C10.29,6.95 11.15,6.84 12,6.84C12.85,6.84 13.71,6.95 14.5,7.17C16.41,5.88 17.25,6.15 17.25,6.15C17.8,7.5 17.45,8.54 17.35,8.79C18,9.5 18.38,10.39 18.38,11.5C18.38,15.32 16.04,16.16 13.81,16.41C14.17,16.72 14.5,17.33 14.5,18.26C14.5,19.6 14.5,20.68 14.5,21C14.5,21.27 14.66,21.59 15.17,21.5C19.14,20.16 22,16.42 22,12A10,10 0 0,0 12,2Z"></path></svg>Github</a></li><li><a href="https://tetua.net/tetua-document"><svg viewBox="0 0 24 24"><path fill="currentColor" d="M14,17H7V15H14M17,13H7V11H17M17,9H7V7H17M19,3H5C3.89,3 3,3.89 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5C21,3.89 20.1,3 19,3Z"></path></svg>Document</a></li><li><a href="https://github.com/ngocphuongnb/tetua/releases"><svg viewBox="0 0 24 24"><path fill="currentColor" d="M5.12,5L5.93,4H17.93L18.87,5M12,17.5L6.5,12H10V10H14V12H17.5L12,17.5M20.54,5.23L19.15,3.55C18.88,3.21 18.47,3 18,3H6C5.53,3 5.12,3.21 4.84,3.55L3.46,5.23C3.17,5.57 3,6 3,6.5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V6.5C21,6 20.83,5.57 20.54,5.23Z"></path></svg>Releases</a></li></ul></div>`
	index__66  = `<div class="topics">`
	index__77  = `<article class="box"><a class="overlay" href="`
	index__81  = `<div class="box-content">`
	index__82  = `<div class="info"><h3><a href="`
	index__85  = `</a></h3><div class="tags">`
	index__86  = `</div></div></div></article>`
	index__87  = `<a class="bg" href="`
	index__89  = `" style="`
	index__96  = `</a><div class="stat flex"><time datetime="`
	index__97  = `" class="date">`
	index__98  = `</time><span class="views">`
	index__99  = `</span><span class="comment">`
	index__100 = `</span></div></div></div>`
	index__109 = `<article><h4>`
	index__113 = `</a></h4><div class="tags">`
	index__114 = `</div></article>`
	index__115 = `<span class="pos">`
	index__116 = `</span>`
)

func Index(topics []*entities.Topic, paginate *entities.Paginate[entities.Post], topPosts []*entities.Post) func(meta *entities.Meta, wr *bufio.Writer) {
	return func(meta *entities.Meta, wr *bufio.Writer) {
		buffer := &WriterAsBuffer{wr}

		buffer.WriteString(commentlist__0)

		var title = meta.GetTitle()
		var appName = config.Setting("app_name")
		var appLogo = config.Setting("app_logo")
		var encodeRequestURL = url.QueryEscape(meta.RequestURL)
		buffer.WriteString(commentlist__1)
		WriteAll(title, true, buffer)
		buffer.WriteString(commentlist__2)
		WriteAll(meta.Canonical, true, buffer)
		buffer.WriteString(commentlist__3)
		WriteAll(meta.Type, true, buffer)
		buffer.WriteString(commentlist__4)
		WriteAll(meta.Canonical, true, buffer)
		buffer.WriteString(commentlist__5)
		WriteAll(title, true, buffer)
		buffer.WriteString(commentlist__6)
		WriteAll(appName, true, buffer)
		buffer.WriteString(commentlist__7)
		WriteAll(config.Setting("twitter_site"), true, buffer)
		buffer.WriteString(commentlist__8)
		WriteAll(title, true, buffer)
		buffer.WriteString(commentlist__9)
		WriteAll(appName, true, buffer)
		buffer.WriteString(commentlist__10)
		WriteAll(appName, true, buffer)
		buffer.WriteString(commentlist__11)
		WriteAll(appName+" Feed", true, buffer)
		buffer.WriteString(commentlist__12)
		WriteAll(utils.Url("/feed"), true, buffer)
		buffer.WriteString(commentlist__13)
		if appLogo != "" {
			buffer.WriteString(commentlist__30)
			WriteAll(appLogo, true, buffer)
			buffer.WriteString(commentlist__31)
			WriteAll(appLogo, true, buffer)
			buffer.WriteString(commentlist__13)
		}
		if meta.Description != "" {
			buffer.WriteString(commentlist__33)
			WriteAll(meta.Description, true, buffer)
			buffer.WriteString(commentlist__34)
			WriteAll(meta.Description, true, buffer)
			buffer.WriteString(commentlist__35)
			WriteAll(meta.Description, true, buffer)
			buffer.WriteString(commentlist__13)
		}
		if meta.Image != "" {
			buffer.WriteString(commentlist__37)
			WriteAll(meta.Image, true, buffer)
			buffer.WriteString(commentlist__38)
			WriteAll(meta.Image, true, buffer)
			buffer.WriteString(commentlist__13)
		}
		WriteAll(asset.CssFile("css/light.min.css"), false, buffer)
		WriteAll(asset.CssFile("css/style.css"), false, buffer)
		WriteAll(config.Setting("inject_header"), false, buffer)
		buffer.WriteString(commentlist__14)
		WriteAll(utils.Url(""), true, buffer)
		buffer.WriteString(commentlist__15)
		var logoUrl = config.Setting("app_logo")
		if logoUrl != "" {
			buffer.WriteString(commentlist__40)
			WriteAll(logoUrl, true, buffer)
			buffer.WriteString(commentlist__41)
			WriteAll(config.Setting("app_name"), true, buffer)
			buffer.WriteString(commentlist__13)
		} else {
			buffer.WriteString(commentlist__43)

		}
		buffer.WriteString(commentlist__16)
		WriteAll(meta.Query, true, buffer)
		buffer.WriteString(commentlist__17)
		WriteAll(utils.Url("/search"), true, buffer)
		buffer.WriteString(commentlist__18)

		if meta.User == nil || meta.User.ID == 0 {
			buffer.WriteString(commentlist__44)
			WriteAll(utils.Url("/login?redirectURL="+encodeRequestURL), true, buffer)
			buffer.WriteString(commentlist__45)
			WriteAll(utils.Url("/register?redirectURL="+encodeRequestURL), true, buffer)
			buffer.WriteString(commentlist__46)

		} else {
			buffer.WriteString(commentlist__44)
			WriteAll(utils.Url("/posts/new"), true, buffer)
			buffer.WriteString(commentlist__48)
			WriteAll(meta.User.Url(), true, buffer)
			buffer.WriteString(commentlist__49)
			WriteAll(meta.User.Username, true, buffer)
			buffer.WriteString(commentlist__50)
			if meta.User.AvatarImageUrl != "" {
				buffer.WriteString(commentlist__57)
				WriteAll(meta.User.AvatarImageUrl, true, buffer)
				buffer.WriteString(commentlist__41)
				WriteAll(meta.User.Username, true, buffer)
				buffer.WriteString(commentlist__13)
			} else {
				buffer.WriteString(commentlist__60)

			}
			buffer.WriteString(commentlist__51)

			if meta.User != nil && meta.User.IsRoot() {
				buffer.WriteString(commentlist__44)
				WriteAll(utils.Url("/manage"), true, buffer)
				buffer.WriteString(commentlist__62)

			}
			buffer.WriteString(commentlist__44)
			WriteAll(meta.User.Url(), true, buffer)
			buffer.WriteString(commentlist__53)
			WriteAll(utils.Url("/posts"), true, buffer)
			buffer.WriteString(commentlist__54)
			WriteAll(utils.Url("/settings"), true, buffer)
			buffer.WriteString(commentlist__55)
			WriteAll(utils.Url("/logout?redirectURL="+encodeRequestURL), true, buffer)
			buffer.WriteString(commentlist__56)

		}
		buffer.WriteString(index__19)

		if config.SHOW_TETUA_BLOCK {
			buffer.WriteString(index__65)

		}
		buffer.WriteString(index__20)

		{
			var (
				topics = topics
			)

			buffer.WriteString(index__66)
			for _, topic := range topics {
				buffer.WriteString(commentlist__106)
				WriteAll(topic.Url(), true, buffer)
				buffer.WriteString(commentlist__49)
				WriteAll(topic.Name, true, buffer)
				buffer.WriteString(commentlist__50)
				WriteAll("# "+topic.Name, true, buffer)
				buffer.WriteString(commentlist__132)
			}
			buffer.WriteString(commentlist__22)
		}

		buffer.WriteString(index__21)

		{
			var (
				msgs = meta.Messages
			)

			if msgs.Length() > 0 {
				buffer.WriteString(commentlist__73)
				var messages = msgs.Get()
				for _, msg := range messages {
					buffer.WriteString(commentlist__75)
					WriteAll(msg.Type, true, buffer)
					buffer.WriteString(commentlist__50)
					WriteAll(msg.Message, true, buffer)
					buffer.WriteString(commentlist__77)
				}
				buffer.WriteString(commentlist__74)
			}
		}

		buffer.WriteString(index__22)
		for _, post := range paginate.Data {
			{
				var (
					post = post
				)

				var postUrl = post.Url()
				var bgStyle = ""
				if post.FeaturedImage != nil {
					bgStyle = fmt.Sprintf("background-image:url('%s')", post.FeaturedImage.Url())
				}
				buffer.WriteString(index__77)
				WriteAll(postUrl, true, buffer)
				buffer.WriteString(commentlist__49)
				WriteAll(post.Name, true, buffer)
				buffer.WriteString(commentlist__50)
				WriteAll(post.Name, true, buffer)
				buffer.WriteString(commentlist__132)
				if post.FeaturedImage != nil && post.FeaturedImage.ID > 0 {
					buffer.WriteString(index__87)
					WriteAll(postUrl, true, buffer)
					buffer.WriteString(commentlist__49)
					WriteAll(post.Name, true, buffer)
					buffer.WriteString(index__89)
					WriteEscString(bgStyle, buffer)
					buffer.WriteString(commentlist__50)
					WriteAll(post.Name, true, buffer)
					buffer.WriteString(commentlist__132)
				}
				buffer.WriteString(index__81)
				{
					buffer.WriteString(commentlist__63)
					WriteAll(post.User.AvatarElm("32", "32", false), false, buffer)
					buffer.WriteString(commentlist__64)
					WriteAll(post.User.Url(), true, buffer)
					buffer.WriteString(commentlist__49)
					WriteAll(post.User.Name(), true, buffer)
					buffer.WriteString(commentlist__50)
					WriteAll(post.User.Name(), true, buffer)
					buffer.WriteString(index__96)
					WriteAll(post.CreatedAt.Format("2006-01-02T15:04:05-0700"), true, buffer)
					buffer.WriteString(index__97)
					WriteAll(post.CreatedAt.Format("January 2, 2006"), true, buffer)
					buffer.WriteString(index__98)
					WriteEscString(fmt.Sprintf("%d views", post.ViewCount), buffer)
					buffer.WriteString(index__99)
					WriteEscString(fmt.Sprintf("%d comments", post.CommentCount), buffer)
					buffer.WriteString(index__100)

				}

				buffer.WriteString(index__82)
				WriteAll(postUrl, true, buffer)
				buffer.WriteString(commentlist__49)
				WriteAll(post.Name, true, buffer)
				buffer.WriteString(commentlist__50)
				WriteAll(post.Name, true, buffer)
				buffer.WriteString(index__85)

				for _, topic := range post.Topics {
					buffer.WriteString(commentlist__106)
					WriteAll(topic.Url(), true, buffer)
					buffer.WriteString(commentlist__49)
					WriteAll(topic.Name, true, buffer)
					buffer.WriteString(commentlist__50)
					WriteAll("#"+topic.Name, true, buffer)
					buffer.WriteString(commentlist__132)
				}
				buffer.WriteString(index__86)

			}

		}
		buffer.WriteString(commentlist__22)
		var links = paginate.Links()
		buffer.WriteString(commentlist__23)
		for _, link := range links {
			buffer.WriteString(commentlist__44)
			WriteAll(link.Link, true, buffer)
			buffer.WriteString(commentlist__103)
			WriteAll(link.Class, true, buffer)
			buffer.WriteString(commentlist__50)
			WriteAll(link.Label, true, buffer)
			buffer.WriteString(commentlist__105)

		}
		buffer.WriteString(index__25)

		for pos, post := range topPosts {
			{
				var (
					post = post
					pos  = pos + 1
				)

				buffer.WriteString(index__109)

				if pos > 0 {
					buffer.WriteString(index__115)
					WriteEscString(fmt.Sprintf("# %d", pos), buffer)
					buffer.WriteString(index__116)
				}
				buffer.WriteString(commentlist__106)
				WriteAll(post.Url(), true, buffer)
				buffer.WriteString(commentlist__49)
				WriteAll(post.Name, true, buffer)
				buffer.WriteString(commentlist__50)
				WriteAll(post.Name, true, buffer)
				buffer.WriteString(index__113)

				for _, topic := range post.Topics {
					buffer.WriteString(commentlist__106)
					WriteAll(topic.Url(), true, buffer)
					buffer.WriteString(commentlist__49)
					WriteAll(topic.Name, true, buffer)
					buffer.WriteString(commentlist__50)
					WriteAll("#"+topic.Name, true, buffer)
					buffer.WriteString(commentlist__132)
				}
				buffer.WriteString(index__114)
			}

		}
		buffer.WriteString(index__26)
		WriteAll(config.Setting("app_name"), true, buffer)
		buffer.WriteString(commentlist__25)

		if meta.User == nil || meta.User.ID == 0 {
			buffer.WriteString(commentlist__106)
			WriteAll(utils.Url("/login?redirectURL="+encodeRequestURL), true, buffer)
			buffer.WriteString(commentlist__107)
			WriteAll(utils.Url("/register?redirectURL="+encodeRequestURL), true, buffer)
			buffer.WriteString(commentlist__108)

		} else {
			{
				buffer.WriteString(commentlist__63)
				WriteAll(meta.User.AvatarElm("32", "32", false), false, buffer)
				buffer.WriteString(commentlist__64)
				WriteAll(meta.User.Url(), true, buffer)
				buffer.WriteString(commentlist__50)
				WriteAll(meta.User.Name(), true, buffer)
				buffer.WriteString(commentlist__66)
				WriteAll("@"+meta.User.Username, true, buffer)
				buffer.WriteString(commentlist__67)
				WriteAll(utils.Url("/posts/new"), true, buffer)
				buffer.WriteString(commentlist__68)
				WriteAll(utils.Url("/posts"), true, buffer)
				buffer.WriteString(commentlist__69)
				WriteAll(utils.Url("/comments"), true, buffer)
				buffer.WriteString(commentlist__70)
				WriteAll(utils.Url("/files"), true, buffer)
				buffer.WriteString(commentlist__71)
				WriteAll(utils.Url("/settings"), true, buffer)
				buffer.WriteString(commentlist__72)

			}

			if meta.User.IsRoot() {
				{
					buffer.WriteString(commentlist__119)
					WriteAll(utils.Url("/manage"), true, buffer)
					buffer.WriteString(commentlist__120)
					WriteAll(utils.Url("/manage/topics"), true, buffer)
					buffer.WriteString(commentlist__121)
					WriteAll(utils.Url("/manage/posts"), true, buffer)
					buffer.WriteString(commentlist__122)
					WriteAll(utils.Url("/manage/pages"), true, buffer)
					buffer.WriteString(commentlist__123)
					WriteAll(utils.Url("/manage/roles"), true, buffer)
					buffer.WriteString(commentlist__124)
					WriteAll(utils.Url("/manage/users"), true, buffer)
					buffer.WriteString(commentlist__125)
					WriteAll(utils.Url("/manage/comments"), true, buffer)
					buffer.WriteString(commentlist__126)
					WriteAll(utils.Url("/manage/files"), true, buffer)
					buffer.WriteString(commentlist__127)
					WriteAll(utils.Url("/manage/settings"), true, buffer)
					buffer.WriteString(commentlist__72)

				}

			}
		}
		buffer.WriteString(commentlist__26)

		for _, topic := range cache.Topics {
			buffer.WriteString(commentlist__106)
			WriteAll(topic.Url(), true, buffer)
			buffer.WriteString(commentlist__49)
			WriteAll(topic.Name, true, buffer)
			buffer.WriteString(commentlist__50)
			WriteAll("#"+topic.Name, true, buffer)
			buffer.WriteString(commentlist__132)
		}
		buffer.WriteString(commentlist__27)
		WriteAll(config.Setting("footer_content"), false, buffer)
		buffer.WriteString(commentlist__28)
		WriteAll(config.Setting("inject_footer"), false, buffer)
		WriteAll(asset.JsFile("js/layout.js"), false, buffer)
		buffer.WriteString(error__26)

	}
}
