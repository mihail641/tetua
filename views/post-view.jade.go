// Code generated by "jade.go"; DO NOT EDIT.

package views

import (
	"bufio"
	"fmt"
	"net/url"

	"github.com/ngocphuongnb/tetua/app/asset"
	"github.com/ngocphuongnb/tetua/app/cache"
	"github.com/ngocphuongnb/tetua/app/config"
	"github.com/ngocphuongnb/tetua/app/entities"
	"github.com/ngocphuongnb/tetua/app/utils"
)

const (
	postview__19 = `</ul><label class="menu-trigger"><svg viewBox="0 0 24 24"><path fill="currentColor" d="M3,6H21V8H3V6M3,11H21V13H3V11M3,16H21V18H3V16Z"></path></svg></label></nav></header><div class="wrapper"><div class="container"><div class="layout two-right"><div class="main">`
	postview__20 = `<article class="box full detail">`
	postview__22 = `<h1 class="post-name">`
	postview__23 = `</h1><div class="tags">`
	postview__25 = `<hr/><h2>`
	postview__26 = `</h2><div class="comments"><div class="flex">`
	postview__27 = `<div><form method="post" action="/comments/new"><input type="hidden" name="post_id" value="`
	postview__28 = `"/><textarea name="content" placeholder="Write your comment here..."></textarea><button type="submit">Comment</button></form></div></div>`
	postview__29 = `</div></div></article></div><div class="right"><div class="box fixed-sidebar"><h2>Trending posts</h2><div class="posts-list">`
)

func PostView(post *entities.Post, relatedPosts []*entities.Post, comments []*entities.Comment) func(meta *entities.Meta, wr *bufio.Writer) {
	return func(meta *entities.Meta, wr *bufio.Writer) {
		buffer := &WriterAsBuffer{wr}

		buffer.WriteString(commentlist__0)

		var title = meta.GetTitle()
		var appName = config.Setting("app_name")
		var appLogo = config.Setting("app_logo")
		var encodeRequestURL = url.QueryEscape(meta.RequestURL)
		buffer.WriteString(commentlist__1)
		WriteAll(title, true, buffer)
		buffer.WriteString(commentlist__2)
		WriteAll(meta.Canonical, true, buffer)
		buffer.WriteString(commentlist__3)
		WriteAll(meta.Type, true, buffer)
		buffer.WriteString(commentlist__4)
		WriteAll(meta.Canonical, true, buffer)
		buffer.WriteString(commentlist__5)
		WriteAll(title, true, buffer)
		buffer.WriteString(commentlist__6)
		WriteAll(appName, true, buffer)
		buffer.WriteString(commentlist__7)
		WriteAll(config.Setting("twitter_site"), true, buffer)
		buffer.WriteString(commentlist__8)
		WriteAll(title, true, buffer)
		buffer.WriteString(commentlist__9)
		WriteAll(appName, true, buffer)
		buffer.WriteString(commentlist__10)
		WriteAll(appName, true, buffer)
		buffer.WriteString(commentlist__11)
		WriteAll(appName+" Feed", true, buffer)
		buffer.WriteString(commentlist__12)
		WriteAll(utils.Url("/feed"), true, buffer)
		buffer.WriteString(commentlist__13)
		if appLogo != "" {
			buffer.WriteString(commentlist__30)
			WriteAll(appLogo, true, buffer)
			buffer.WriteString(commentlist__31)
			WriteAll(appLogo, true, buffer)
			buffer.WriteString(commentlist__13)
		}
		if meta.Description != "" {
			buffer.WriteString(commentlist__33)
			WriteAll(meta.Description, true, buffer)
			buffer.WriteString(commentlist__34)
			WriteAll(meta.Description, true, buffer)
			buffer.WriteString(commentlist__35)
			WriteAll(meta.Description, true, buffer)
			buffer.WriteString(commentlist__13)
		}
		if meta.Image != "" {
			buffer.WriteString(commentlist__37)
			WriteAll(meta.Image, true, buffer)
			buffer.WriteString(commentlist__38)
			WriteAll(meta.Image, true, buffer)
			buffer.WriteString(commentlist__13)
		}
		WriteAll(asset.CssFile("css/light.min.css"), false, buffer)
		WriteAll(asset.CssFile("css/style.css"), false, buffer)
		WriteAll(config.Setting("inject_header"), false, buffer)
		buffer.WriteString(commentlist__14)
		WriteAll(utils.Url(""), true, buffer)
		buffer.WriteString(commentlist__15)
		var logoUrl = config.Setting("app_logo")
		if logoUrl != "" {
			buffer.WriteString(commentlist__40)
			WriteAll(logoUrl, true, buffer)
			buffer.WriteString(commentlist__41)
			WriteAll(config.Setting("app_name"), true, buffer)
			buffer.WriteString(commentlist__13)
		} else {
			buffer.WriteString(commentlist__43)

		}
		buffer.WriteString(commentlist__16)
		WriteAll(meta.Query, true, buffer)
		buffer.WriteString(commentlist__17)
		WriteAll(utils.Url("/search"), true, buffer)
		buffer.WriteString(commentlist__18)

		if meta.User == nil || meta.User.ID == 0 {
			buffer.WriteString(commentlist__44)
			WriteAll(utils.Url("/login?redirectURL="+encodeRequestURL), true, buffer)
			buffer.WriteString(commentlist__45)
			WriteAll(utils.Url("/register?redirectURL="+encodeRequestURL), true, buffer)
			buffer.WriteString(commentlist__46)

		} else {
			buffer.WriteString(commentlist__44)
			WriteAll(utils.Url("/posts/new"), true, buffer)
			buffer.WriteString(commentlist__48)
			WriteAll(meta.User.Url(), true, buffer)
			buffer.WriteString(commentlist__49)
			WriteAll(meta.User.Username, true, buffer)
			buffer.WriteString(commentlist__50)
			if meta.User.AvatarImageUrl != "" {
				buffer.WriteString(commentlist__57)
				WriteAll(meta.User.AvatarImageUrl, true, buffer)
				buffer.WriteString(commentlist__41)
				WriteAll(meta.User.Username, true, buffer)
				buffer.WriteString(commentlist__13)
			} else {
				buffer.WriteString(commentlist__60)

			}
			buffer.WriteString(commentlist__51)

			if meta.User != nil && meta.User.IsRoot() {
				buffer.WriteString(commentlist__44)
				WriteAll(utils.Url("/manage"), true, buffer)
				buffer.WriteString(commentlist__62)

			}
			buffer.WriteString(commentlist__44)
			WriteAll(meta.User.Url(), true, buffer)
			buffer.WriteString(commentlist__53)
			WriteAll(utils.Url("/posts"), true, buffer)
			buffer.WriteString(commentlist__54)
			WriteAll(utils.Url("/settings"), true, buffer)
			buffer.WriteString(commentlist__55)
			WriteAll(utils.Url("/logout?redirectURL="+encodeRequestURL), true, buffer)
			buffer.WriteString(commentlist__56)

		}
		buffer.WriteString(postview__19)

		{
			var (
				msgs = meta.Messages
			)

			if msgs.Length() > 0 {
				buffer.WriteString(commentlist__73)
				var messages = msgs.Get()
				for _, msg := range messages {
					buffer.WriteString(commentlist__75)
					WriteAll(msg.Type, true, buffer)
					buffer.WriteString(commentlist__50)
					WriteAll(msg.Message, true, buffer)
					buffer.WriteString(commentlist__77)
				}
				buffer.WriteString(commentlist__74)
			}
		}

		buffer.WriteString(postview__20)
		if post.FeaturedImage != nil && post.FeaturedImage.ID > 0 {
			buffer.WriteString(pageview__69)
			WriteAll(post.FeaturedImage.Url(), true, buffer)
			buffer.WriteString(commentlist__41)
			WriteAll(post.Name, true, buffer)
			buffer.WriteString(pageview__71)

		}
		buffer.WriteString(index__81)
		{
			var (
				post = post
			)

			buffer.WriteString(commentlist__63)
			WriteAll(post.User.AvatarElm("32", "32", false), false, buffer)
			buffer.WriteString(commentlist__64)
			WriteAll(post.User.Url(), true, buffer)
			buffer.WriteString(commentlist__49)
			WriteAll(post.User.Name(), true, buffer)
			buffer.WriteString(commentlist__50)
			WriteAll(post.User.Name(), true, buffer)
			buffer.WriteString(index__96)
			WriteAll(post.CreatedAt.Format("2006-01-02T15:04:05-0700"), true, buffer)
			buffer.WriteString(index__97)
			WriteAll(post.CreatedAt.Format("January 2, 2006"), true, buffer)
			buffer.WriteString(index__98)
			WriteEscString(fmt.Sprintf("%d views", post.ViewCount), buffer)
			buffer.WriteString(index__99)
			WriteEscString(fmt.Sprintf("%d comments", post.CommentCount), buffer)
			buffer.WriteString(index__100)

		}

		buffer.WriteString(postview__22)
		WriteAll(post.Name, true, buffer)
		buffer.WriteString(postview__23)

		for _, topic := range post.Topics {
			buffer.WriteString(commentlist__106)
			WriteAll(topic.Url(), true, buffer)
			buffer.WriteString(commentlist__50)
			WriteAll("#"+topic.Name, true, buffer)
			buffer.WriteString(commentlist__132)
		}
		buffer.WriteString(commentlist__22)
		WriteAll(post.ContentHTML, false, buffer)
		buffer.WriteString(postview__25)
		WriteEscString(fmt.Sprintf("Discussion (%d)", post.CommentCount), buffer)
		buffer.WriteString(postview__26)
		WriteAll(meta.User.AvatarElm("50", "50", false), false, buffer)
		buffer.WriteString(postview__27)
		WriteAll(post.ID, true, buffer)
		buffer.WriteString(postview__28)

		for _, comment := range comments {
			var canEdit = meta.User != nil && comment.UserID == meta.User.ID
			{
				var (
					comment       = comment
					postID        = post.ID
					editCondition = canEdit
					extraInfo     = false
				)

				if extraInfo {
					buffer.WriteString(commentlist__86)
					WriteAll(comment.Post.Url(), true, buffer)
					buffer.WriteString(commentlist__87)
					WriteAll(comment.Post.Name, true, buffer)
					buffer.WriteString(commentlist__88)

				}
				buffer.WriteString(commentlist__78)
				WriteEscString(fmt.Sprintf("comment-%d", comment.ID), buffer)
				buffer.WriteString(commentlist__50)
				WriteAll(comment.User.AvatarElm("30", "30", false), false, buffer)
				buffer.WriteString(commentlist__64)
				WriteAll(comment.User.Url(), true, buffer)
				buffer.WriteString(commentlist__50)
				WriteAll(comment.User.Name(), true, buffer)
				buffer.WriteString(commentlist__82)
				WriteAll(comment.CreatedAt.Format("January 2, 2006 15:04 MST"), true, buffer)
				buffer.WriteString(commentlist__83)
				WriteAll(comment.ContentHTML, false, buffer)
				if editCondition {
					buffer.WriteString(commentlist__89)
					WriteAll(comment.ID, true, buffer)
					buffer.WriteString(commentlist__90)
					WriteAll(comment.ID, true, buffer)
					buffer.WriteString(commentlist__91)

					if extraInfo {
						var commentUrl = fmt.Sprintf("%s#comment-%d", comment.Post.Url(), comment.ID)
						var postCommentsUrl = fmt.Sprintf("/manage/comments?post=%d", postID)
						var userCommentsUrl = fmt.Sprintf("/manage/comments?user=%d", postID)
						buffer.WriteString(commentlist__93)
						WriteEscString(commentUrl, buffer)
						buffer.WriteString(commentlist__94)

						if meta.User.IsRoot() {
							buffer.WriteString(commentlist__95)
							WriteEscString(postCommentsUrl, buffer)
							buffer.WriteString(commentlist__96)
							WriteEscString(userCommentsUrl, buffer)
							buffer.WriteString(commentlist__97)

						}
					}
					buffer.WriteString(commentlist__22)
				}
				buffer.WriteString(commentlist__22)
				if editCondition {
					buffer.WriteString(commentlist__98)
					WriteEscString(fmt.Sprintf("/comments/%d", comment.ID), buffer)
					buffer.WriteString(commentlist__99)
					WriteAll(postID, true, buffer)
					buffer.WriteString(commentlist__100)
					WriteAll(comment.Content, true, buffer)
					buffer.WriteString(commentlist__101)

				}
				buffer.WriteString(commentlist__85)
			}

		}
		buffer.WriteString(postview__29)

		for pos, post := range relatedPosts {
			{
				var (
					post = post
					pos  = pos + 1
				)

				buffer.WriteString(index__109)

				if pos > 0 {
					buffer.WriteString(index__115)
					WriteEscString(fmt.Sprintf("# %d", pos), buffer)
					buffer.WriteString(index__116)
				}
				buffer.WriteString(commentlist__106)
				WriteAll(post.Url(), true, buffer)
				buffer.WriteString(commentlist__49)
				WriteAll(post.Name, true, buffer)
				buffer.WriteString(commentlist__50)
				WriteAll(post.Name, true, buffer)
				buffer.WriteString(index__113)

				for _, topic := range post.Topics {
					buffer.WriteString(commentlist__106)
					WriteAll(topic.Url(), true, buffer)
					buffer.WriteString(commentlist__49)
					WriteAll(topic.Name, true, buffer)
					buffer.WriteString(commentlist__50)
					WriteAll("#"+topic.Name, true, buffer)
					buffer.WriteString(commentlist__132)
				}
				buffer.WriteString(index__114)
			}

		}
		buffer.WriteString(index__26)
		WriteAll(config.Setting("app_name"), true, buffer)
		buffer.WriteString(commentlist__25)

		if meta.User == nil || meta.User.ID == 0 {
			buffer.WriteString(commentlist__106)
			WriteAll(utils.Url("/login?redirectURL="+encodeRequestURL), true, buffer)
			buffer.WriteString(commentlist__107)
			WriteAll(utils.Url("/register?redirectURL="+encodeRequestURL), true, buffer)
			buffer.WriteString(commentlist__108)

		} else {
			{
				buffer.WriteString(commentlist__63)
				WriteAll(meta.User.AvatarElm("32", "32", false), false, buffer)
				buffer.WriteString(commentlist__64)
				WriteAll(meta.User.Url(), true, buffer)
				buffer.WriteString(commentlist__50)
				WriteAll(meta.User.Name(), true, buffer)
				buffer.WriteString(commentlist__66)
				WriteAll("@"+meta.User.Username, true, buffer)
				buffer.WriteString(commentlist__67)
				WriteAll(utils.Url("/posts/new"), true, buffer)
				buffer.WriteString(commentlist__68)
				WriteAll(utils.Url("/posts"), true, buffer)
				buffer.WriteString(commentlist__69)
				WriteAll(utils.Url("/comments"), true, buffer)
				buffer.WriteString(commentlist__70)
				WriteAll(utils.Url("/files"), true, buffer)
				buffer.WriteString(commentlist__71)
				WriteAll(utils.Url("/settings"), true, buffer)
				buffer.WriteString(commentlist__72)

			}

			if meta.User.IsRoot() {
				{
					buffer.WriteString(commentlist__119)
					WriteAll(utils.Url("/manage"), true, buffer)
					buffer.WriteString(commentlist__120)
					WriteAll(utils.Url("/manage/topics"), true, buffer)
					buffer.WriteString(commentlist__121)
					WriteAll(utils.Url("/manage/posts"), true, buffer)
					buffer.WriteString(commentlist__122)
					WriteAll(utils.Url("/manage/pages"), true, buffer)
					buffer.WriteString(commentlist__123)
					WriteAll(utils.Url("/manage/roles"), true, buffer)
					buffer.WriteString(commentlist__124)
					WriteAll(utils.Url("/manage/users"), true, buffer)
					buffer.WriteString(commentlist__125)
					WriteAll(utils.Url("/manage/comments"), true, buffer)
					buffer.WriteString(commentlist__126)
					WriteAll(utils.Url("/manage/files"), true, buffer)
					buffer.WriteString(commentlist__127)
					WriteAll(utils.Url("/manage/settings"), true, buffer)
					buffer.WriteString(commentlist__72)

				}

			}
		}
		buffer.WriteString(commentlist__26)

		for _, topic := range cache.Topics {
			buffer.WriteString(commentlist__106)
			WriteAll(topic.Url(), true, buffer)
			buffer.WriteString(commentlist__49)
			WriteAll(topic.Name, true, buffer)
			buffer.WriteString(commentlist__50)
			WriteAll("#"+topic.Name, true, buffer)
			buffer.WriteString(commentlist__132)
		}
		buffer.WriteString(commentlist__27)
		WriteAll(config.Setting("footer_content"), false, buffer)
		buffer.WriteString(commentlist__28)
		WriteAll(config.Setting("inject_footer"), false, buffer)
		WriteAll(asset.JsFile("js/layout.js"), false, buffer)
		WriteAll(asset.JsFile("editor/highlight-11.5.0.min.js"), false, buffer)
		WriteAll(asset.JsFile("js/main.js"), false, buffer)
		buffer.WriteString(managecommentindex__31)

	}
}
